{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww22160\viewh10080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Project:  Email_autosend and Email_log MySQL database\
\
Running/Testing instruction:  python auto_send_email.py  is sufficient to execute all tasks, all other python scripts are auxiliary files. \
\
For automation: Sudo python  init_cron_job_lst.py [make sure to use anaconda]\
\
! The auto_send_email.py getpass.getpass() needs to be commented out so that the cron can operate properly and replaced with your own password.\
\
Need to fill the host ip for the vm in mysql_connect.py\
Need to fill in your email, your password  in auto_send_email.py\
\
************************************************************\
\'97SETUP MYSQL in the Linux Virtual Machine:\
\
Env: Ubuntu\
1. Install mysql apt repo {\field{\*\fldinst{HYPERLINK "https://dev.mysql.com/downloads/repo/apt/"}}{\fldrslt https://dev.mysql.com/downloads/repo/apt/}}\
\
2. Install MySQL shell\'97> Sudo apt-get install mysql -shell\
\
3. Try local login by root\'97> root -u root -p and enter your password\
\
4.. Disable the binding to the host address to allow remote access  \
\
\'97>sudo nano mysqld.cnf in /etc/mysql/mysql.conf.d and comment the listening port\
 127.0.0.1 (localhost)\
\
 bypass password authentication by adding skip-grant tables in the mysqld.cnf. (optional)\
\
**************************************************************\
\'97 SETUP NAVICAT Premium for DB admin (visualize the mysql database)\
\
Download in the host OS machine: {\field{\*\fldinst{HYPERLINK "https://www.navicat.com/en/"}}{\fldrslt https://www.navicat.com/en/}}\
\
\
***************************************************************\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl312\slmult1\pardirnatural\partightenfactor0
\cf0 \'97Python Scripts\
                    \'97\'97\'97auto_email_module.py: parse the emails with proper header and attachments based on the flags (parameters) coming from the console file auto_send_email.py\
                    \'97\'97\'97mysql_connect.py: authenticate to the mysql server in the Linux virtual machine and grab input from the auto_send_email.py, which contains function flags and parameters. \
                                                              It then writes to the database log table with the email activity.\
\
                    \'97\'97\'97auto_email_send.py: \
                                                         \'97\'97 Main console script to feed in the recipients, senders, and attachments lists of the email to auto-send.\
                                                         \'97\'97 Authenticate to the email server and send the emails via calling the send_email function in the auto_email_module.py\
                                                         \'97\'97 Authenticate to the MySQL server and call the mysql_connect.py to write the log in the MySQL server\
                             \
                                                               \
\
                    \'97\'97\'97init_cron_job_list.py (* currently working):\
                                                         \'97\'97 call auto_email_send.py to run it regularly and add the cron python3 auto_email_send.py into the crontab and set the routine for that job. \
                                                         \'97\'97 generate the log file to see how the script is being executed on the background\
 \
\'97SQL script\
\
              \'97\'97\'97 init_email_log_autosend.sql\
                          Set up the email log table headers like names, receipts, and send times to make sure the successful execution of mysql_connect.py  (entering the query to the right header )\
-log text file\
             \'97 \'97\'97 log.txt\
                         The output file that records the printout in every background of auto_email_send.py\
Future work:\
\
                  1. Explore the MySQL scheduler to auto-write for the scheduling emails send in the table\
                  2.  Debug the python-cron module to make sure the authentication by the user will not stop the cron job command from running.\
                  3. Import people\'92s birthdays in CSV and use COPY FROM  command to write the CSV to MYSQL and feed that into the cron job script to automate.\
\
}